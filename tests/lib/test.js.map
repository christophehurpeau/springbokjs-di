{"version":3,"sources":["../src/test.js"],"names":[],"mappings":";;;AACA,OAAO,CAAC,UAAU,CAAC,CAAC;AACpB,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAClC,IAAI,GAAG,GAAG,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,GAAG,EAAE,CAAA,AAAC,GAAG,GAAG,CAAC;;AAEnE,IAAI,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;;AAEzB,IAAI,CAAC,kEAAkE,EAAE,YAAM;AAC3E,QAAI,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAM;AACnE,cAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB,cAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB,cAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB,cAAM,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACtC,cAAM,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAEtC,cAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC;AAC7C,cAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC;AAC7C,cAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,aAAa,CAAC,CAAC;;AAEvC,YAAI,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACnD,cAAM,CAAC,aAAa,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC5C,CAAC,CAAC;CACN,CAAC,CAAC","file":"tests/src/test.js","sourcesContent":["/* global test */\nrequire('es6-shim');\nvar assert = require('proclaim');\nvar expect = assert.strictEqual;\nconsole.log(process.env.TEST_COV);\nvar lib = '../../lib' + (process.env.TEST_COV ? '-cov' : '') + '/';\n\nvar diUtils = require(lib);\nvar Di = require(lib).Di;\n\ntest('should load classes in the directory and return the right result', () => {\n    var di = new Di();\n    return diUtils.directory(di, __dirname + '/../../samples/').then(() => {\n        assert.isObject(di.a);\n        assert.isObject(di.b);\n        assert.isObject(di.c);\n        assert.isFunction(di._classes.Class1);\n        assert.isFunction(di._classes.Class2);\n\n        expect(di.a.sayHello('Test'), 'Hello Test!');\n        expect(di.b.sayHello('Test'), 'Hello Test!');\n        expect(di.c.sayHello(), 'Hello John!');\n\n        var class1 = di.createInstance('Class1', ['John']);\n        expect('Hello John!', class1.sayHello());\n    });\n});\n"]}