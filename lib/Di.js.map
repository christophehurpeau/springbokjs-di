{"version":3,"sources":["../src/Di.js"],"names":[],"mappings":";;;;;;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;IAEN,EAAE;AACR,aADM,EAAE,GACL;8BADG,EAAE;;AAEf,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,YAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACf,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;KAChC;;iBANgB,EAAE;AAQnB,iBAAS;mBAAA,mBAAC,GAAG,EAAE,KAAK,EAAE;AAClB,oBAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aAC9B;;AAED,WAAG;mBAAA,aAAC,IAAI,EAAE,KAAK,EAAE;AACb,oBAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvB,uBAAO,OAAO,CAAC,OAAO,EAAE,CAAC;aAC5B;;AAED,gBAAQ;mBAAA,kBAAC,SAAS,EAAE,MAAM,EAAE;;;AACxB,oBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACnC,oBAAI,MAAM,CAAC,SAAS,EAAE;AAClB,2BAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAK;AACrD,4BAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3D,8BAAK,WAAW,CAAC,GAAG,CAAC,GAAG,MAAK,IAAI,CAAC,GAAG,CAAC,GAAG,MAAK,GAAG,CAAC,GAAG,QAAQ,CAAC;qBACjE,CAAC,CAAC;iBACN;AACD,uBAAO,OAAO,CAAC,OAAO,EAAE,CAAC;aAC5B;;AAED,WAAG;mBAAA,aAAC,GAAG,EAAE;AACL,uBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;;AAED,WAAG;mBAAA,aAAC,GAAG,EAAE,KAAK,EAAE;AACZ,oBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aACtC;;AAED,iBAAS;mBAAA,mBAAC,IAAI,EAAE,MAAM,EAAE;;;AACpB,oBAAI,KAAK,GAAG,MAAM,CAAC;;AAEnB,oBAAI,MAAM,CAAC,YAAY,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AACrD,0BAAM,IAAI,KAAK,CAAC,IAAI,GAAG,4CAA4C,CAAC,CAAC;iBACxE;;AAED,oBAAI,MAAM,WAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AAChD,yBAAK,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,WAAQ,GAAG,MAAM,CAAC;AAC7D,wBAAI,MAAM,CAAC,YAAY,EAAE;AACrB,8BAAM,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,EAAE;AACzC,wCAAY,EAAE,IAAI;AAClB,oCAAQ,EAAE,KAAK;AACf,sCAAU,EAAE,KAAK;AACjB,iCAAK,EAAE,MAAM,CAAC,YAAY;yBAC7B,CAAC,CAAC;qBACN;AACD,wBAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvB,wBAAI,MAAM,GAAG,EAAE,CAAC;AAChB,0BAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACrB,2BAAO,MAAM,CAAC;;iBAEjB,MAAM;AACH,0BAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAK;AAC7B,8BAAK,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/B,CAAC,CAAC;AACH,2BAAO,MAAM,CAAC;iBACjB;aACJ;;AAED,cAAM;mBAAA,gBAAC,GAAG,EAAE;;;AACR,oBAAI,UAAU,GAAG,EAAE,CAAC;AACpB,sBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AAC/B,wBAAI,GAAG,GAAG,CAAC,UAAS,QAAQ,EAAE;AAAE,+BAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBAAE,CAAA,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAK;AAC9F,wBAAI,MAAM,GAAG,MAAK,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5C,0BAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACjC,4BAAI,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE;AACvB,sCAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ,CAAC,CAAC;iBACN,CAAC,CAAC;;AAEH,uBAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;aAClD;;AAED,8BAAsB;mBAAA,gCAAC,UAAU,EAAE;;;AAC/B,oBAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,UAAC,SAAS,EAAK;AACzC,wBAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3D,wBAAI,CAAC,MAAK,QAAQ,CAAC,SAAS,CAAC,EAAE;AAC3B,8BAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,sBAAsB,CAAC,CAAC;qBAClE;AACD,wBAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC;AACjE,0BAAK,WAAW,CAAC,GAAG,CAAC,GAAG,MAAK,IAAI,CAAC,GAAG,CAAC,GAAG,MAAK,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC9D,0BAAM,CAAC,IAAI,CAAC,MAAK,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACxC,8BAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE;AACjC,sCAAU,EAAE,KAAK;AACjB,oCAAQ,EAAE,KAAK;AACf,wCAAY,EAAE,IAAI;AAClB,iCAAK,EAAE,MAAK,QAAQ,CAAC,GAAG,CAAC;yBAC5B,CAAC,CAAC;qBACN,CAAC,CAAC;AACH,2BAAO,QAAQ,CAAC;iBACnB,CAAC,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAK;AACjB,2BAAO,MAAK,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAM;AACpD,4BAAI,QAAQ,CAAC,UAAU,EAAE;AACrB,mCAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,kCAAkC,CAAC,CAAC;AAC5E,mCAAO,QAAQ,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC;uCAAM,QAAQ;6BAAA,CAAC,CAAC;yBACrD;AACD,+BAAO,QAAQ,CAAC;qBACnB,CAAC,CAAC;iBACN,CAAC,CAAC;AACH,uBAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,SAAS,EAAK;AAC7C,6BAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAK;AACxB,gCAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,+BAAO,QAAQ,CAAC;qBACnB,CAAC,CAAC;iBACN,CAAC,CAAC;aACN;;AAED,2BAAmB;mBAAA,6BAAC,KAAK,EAA0B;oBAAxB,kBAAkB,gCAAG,CAAC;;AAC7C,uBAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;aAC/F;;AAED,4BAAoB;mBAAA,8BAAC,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE;;;AAC1D,oBAAI,CAAC,YAAY,EAAE;AACf,2BAAO,OAAO,CAAC,OAAO,EAAE,CAAC;iBAC5B;AACD,oBAAI,kBAAkB,GAAG,EAAE,EAAE;AACzB,0BAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;iBACrE;AACD,oBAAI,QAAQ,GAAG,EAAE,CAAC;;AAElB,4BAAY,CAAC,OAAO,CAAC,UAAC,UAAU,EAAK;;AAEjC,wBAAI,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,SAAS,EAAE;AACzC,gCAAQ,CAAC,IAAI,CACT,MAAK,cAAc,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAK;AAC9F,iCAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AACjC,gCAAI,UAAU,CAAC,IAAI,EAAE;AACjB,sCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,UAAU,EAAK;AACjD,wCAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AACvB,8CAAM,IAAI,KAAK,CAAC,cAAc,GAAG,UAAU,GAAG,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;qCAChF;AACD,4CAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;iCACrE,CAAC,CAAC;6BACN;yBACJ,CAAC,CACL,CAAC;qBACL,MAAM;AACH,4BAAI,CAAC,MAAK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AAC7B,kCAAM,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,iCAAiC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;yBACrF;AACD,6BAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,MAAK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;qBACtD;iBACJ,CAAC,CAAC;;AAEH,uBAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAChC;;AAED,YAAI;mBAAA,cAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;AACvB,oBAAI,CAAC,KAAK,EAAE;AACR,0BAAM,IAAI,KAAK,CAAC,yCAAyC,GAAG,IAAI,CAAC,CAAC;iBACrE;AACD,oBAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACjB,2BAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,qBAAqB,CAAC,CAAC;iBAC1D;AACD,oBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACrC,oBAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnC,oBAAI,OAAO,IAAK,OAAO,KAAK,KAAK,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,AAAC,EAAE;AACvF,wBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AAC5B,wBAAI,CAAC,KAAK,CAAC,WAAW,EAAE;AACpB,6BAAK,CAAC,WAAW,GAAG,IAAI,CAAC;qBAC5B;AACD,wBAAI,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,EAAE;AACtC,4BAAI,EAAE,GAAG,IAAI,CAAC;AACd,6BAAK,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAiC;gCAAxB,kBAAkB,gCAAG,CAAC;;AACjE,mCAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;AAC7D,mCAAO,CAAC,KAAK,EAAE,CAAC;AAChB,gCAAI,CAAC,mBAAmB,GAAG,YAAW,EAAE,CAAC;AACzC,gCAAI,KAAK,CAAC,YAAY,EAAE;AACpB,oCAAI;AACA,2CAAO,EAAE,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAC,YAAY,EAAE,kBAAkB,GAAG,CAAC,CAAC,CAAC;iCACpF,CAAC,OAAO,GAAG,EAAE;AACV,0CAAM,IAAI,KAAK,CAAC,iDAAiD,GACjD,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;iCAC9C;6BACJ;yBACJ,CAAC;qBACL;iBACJ;AACD,oBAAI,KAAK,CAAC,YAAY,EAAE;AACpB,0BAAM,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,EAAE;AACzC,oCAAY,EAAE,IAAI;AAClB,gCAAQ,EAAE,KAAK;AACf,kCAAU,EAAE,KAAK;AACjB,6BAAK,EAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC;qBAChE,CAAC,CAAC;iBACN;aACJ;;AA+BD,sBAAc;mBAAA,wBAAC,SAAS,EAAE,IAAI,EAA0B;oBAAxB,kBAAkB,gCAAG,CAAC;;;AAElD,oBAAI,CAAC,SAAS,EAAE;AACZ,0BAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;iBACrD;AACD,oBAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACtC,oBAAI,CAAC,MAAM,EAAE;AACT,0BAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,YAAY,CAAC,CAAC;iBACxD;AACD,uBAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,CAAC;aAClE;;AAED,wBAAgB;mBAAA,0BAAC,MAAM,EAAE,IAAI,EAA0B;;;oBAAxB,kBAAkB,gCAAG,CAAC;;AACjD,oBAAI,QAAQ,CAAC;AACb,wBAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;AAE3C,sBAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACxC,0BAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE;AACjC,kCAAU,EAAE,KAAK;AACjB,gCAAQ,EAAE,KAAK;AACf,oCAAY,EAAE,IAAI;AAClB,6BAAK,EAAE,MAAK,QAAQ,CAAC,GAAG,CAAC;qBAC5B,CAAC,CAAC;iBACN,CAAC,CAAC;AACH,oBAAI,MAAM,CAAC,YAAY,EAAE;AACrB,2BAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,MAAM,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAC9E,IAAI,CAAC,YAAM;AACR,4BAAI,QAAQ,CAAC,UAAU,EAAE;AACrB,mCAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,GAAG,kCAAkC,CAAC,CAAC;AACjF,oCAAQ,CAAC,UAAU,EAAE,CAAC;yBACzB;qBACJ,CAAC,CACD,IAAI,CAAC;+BAAM,QAAQ;qBAAA,CAAC,CAAC;iBAC7B;AACD,sBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC7B,oBAAI,QAAQ,CAAC,UAAU,EAAE;AACrB,2BAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,GAAG,kCAAkC,CAAC,CAAC;AACjF,2BAAO,QAAQ,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC;+BAAM,QAAQ;qBAAA,CAAC,CAAC;iBACrD;;AAED,sBAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACtC,uBAAG,EAAE,eAAW;AACZ,4BAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC7C,8BAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACtC,oCAAQ,EAAE,KAAK;AACf,wCAAY,EAAE,KAAK;AACnB,iCAAK,EAAE,MAAM;yBAChB,CAAC,CAAC;AACH,+BAAO,MAAM,CAAC;qBAEjB;iBACJ,CAAC,CAAC;;AAEH,uBAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aACpC;;;AAnFM,yBAAiB;mBAAA,2BAAC,YAAY,EAAE;AACnC,uBAAO,CAAC,YAAW;AACf,wBAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;AAC7B,+BAAO,YAAY,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK;AAC3B,mCAAO;AACH,mCAAG,EAAE,CAAC;AACN,oCAAI,EAAE,CAAC;6BACV,CAAC;yBACL,CAAC,CAAC;qBACN,MAAM;AACH,+BAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAK;AAC1C,gCAAI,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AACnC,gCAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AAChC,0CAAU,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;6BACrC;AACD,sCAAU,CAAC,GAAG,GAAG,GAAG,CAAC;;AAErB,gCAAI,CAAC,UAAU,CAAC,IAAI,EAAE;AAClB,0CAAU,CAAC,IAAI,GAAG,GAAG,CAAC;AACtB,oCAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,IAAI,EAAE;AACzC,8CAAU,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iCACzD;6BACJ;AACD,mCAAO,UAAU,CAAC;yBACrB,CAAC,CAAC;qBACN;iBACJ,CAAA,EAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACxB;;;;WA/NgB,EAAE;;;iBAAF,EAAE","file":"src/Di.js","sourcesContent":["var path = require('path');\n\nexport default class Di {\n    constructor() {\n        this._classes = {};\n        this._singletons = {};\n        this._all = {};\n        this._globals = { di: this };\n    }\n\n    addGlobal(key, value) {\n        this._globals[key] = value;\n    }\n\n    add(name, value) {\n        this._add(name, value);\n        return Promise.resolve();\n    }\n\n    addClass(className, class_) {\n        this._add(className, class_, true);\n        if (class_.singleton) {\n            return this.createInstance(className).then((instance) => {\n                var key = className[0].toLowerCase() + className.substr(1);\n                this._singletons[key] = this._all[key] = this[key] = instance;\n            });\n        }\n        return Promise.resolve();\n    }\n\n    get(key) {\n        return this[key];\n    }\n\n    set(key, value) {\n        this._all[key] = this[key] = value;\n    }\n\n    addModule(name, module) {\n        var value = module;\n\n        if (module.dependencies && typeof module !== 'function') {\n            throw new Error(name + ': dependencies in the module is deprecated');\n        }\n\n        if (module.default || typeof module === 'function') {\n            value = typeof module === 'object' ? module.default : module;\n            if (module.dependencies) {\n                Object.defineProperty(value, 'dependencies', {\n                    configurable: true,\n                    writable: false,\n                    enumerable: false,\n                    value: module.dependencies\n                });\n            }\n            this._add(name, value);\n            var result = {};\n            result[name] = value;\n            return result;\n            // return { [name]: value };\n        } else {\n            Object.keys(module).map((key) => {\n                this._add(key, module[key]);\n            });\n            return module;\n        }\n    }\n\n    addAll(map) {\n        var singletons = [];\n        Object.keys(map).forEach((name) => {\n            var key = (function(splitted) { return splitted[splitted.length - 1]; })(name.split('/'))    ;\n            var values = this.addModule(key, map[name]);\n            Object.keys(values).forEach((key) => {\n                if (values[key].singleton) {\n                    singletons.push(key);\n                }\n            });\n        });\n\n        return this._instantiateSingletons(singletons);\n    }\n\n    _instantiateSingletons(singletons) {\n        var promises = singletons.map((className) => {\n            var key = className[0].toLowerCase() + className.substr(1);\n            if (!this._classes[className]) {\n                throw new Error('Class ' + className + ' not found in the di');\n            }\n            var instance = Object.create(this._classes[className].prototype);\n            this._singletons[key] = this._all[key] = this[key] = instance;\n            Object.keys(this._globals).forEach((key) => {\n                Object.defineProperty(instance, key, {\n                    enumerable: false,\n                    writable: false,\n                    configurable: true,\n                    value: this._globals[key]\n                });\n            });\n            return instance;\n        }).map((instance) => {\n            return this.resolveDependencies(instance, 0).then(() => {\n                if (instance.initialize) {\n                    console.log(instance.constructor.name + ' initialize method is deprecated');\n                    return instance.initialize().then(() => instance);\n                }\n                return instance;\n            });\n        });\n        return Promise.all(promises).then((instances) => {\n            instances.map((instance) => {\n                instance.constructor.call(instance);\n                return instance;\n            });\n        });\n    }\n\n    resolveDependencies(value, _internalCallCount = 0) {\n        return this._resolveDependencies(value, value.constructor.dependencies, _internalCallCount);\n    }\n\n    _resolveDependencies(value, dependencies, _internalCallCount) {\n        if (!dependencies) {\n            return Promise.resolve();\n        }\n        if (_internalCallCount > 20) {\n            throw new Error('Called more than 20 times _resolveDependencies');\n        }\n        var promises = [];\n\n        dependencies.forEach((dependency) => {\n            // console.log('='.repeat(_internalCallCount) + '> ' + 'Resolving dependency ' + dependency.key);\n            if (dependency.call || dependency.arguments) {\n                promises.push(\n                    this.createInstance(dependency.name, dependency.arguments, _internalCallCount).then((instance) => {\n                        value[dependency.key] = instance;\n                        if (dependency.call) {\n                            Object.keys(dependency.call).forEach((methodName) => {\n                                if (!instance[methodName]) {\n                                    throw new Error('Cannot call ' + methodName + ' in class ' + dependency.key);\n                                }\n                                instance[methodName].apply(instance, dependency.call[methodName]);\n                            });\n                        }\n                    })\n                );\n            } else {\n                if (!this._all[dependency.name]) {\n                    throw new Error(value.name + ': Failed to resolve dependency ' + dependency.name);\n                }\n                value[dependency.key] = this._all[dependency.name];\n            }\n        });\n\n        return Promise.all(promises);\n    }\n\n    _add(name, value, isClass) {\n        if (!value) {\n            throw new Error('Trying to add a empty value in the di: ' + name);\n        }\n        if (this._all[name]) {\n            console.warn('[warn] ' + name + ' is already defined');\n        }\n        this._all[name] = this[name] = value;\n        var basename = path.basename(name);\n        if (isClass || (typeof value === 'function' && basename[0].toUpperCase() === basename[0])) {\n            this._classes[name] = value;\n            if (!value.displayName) {\n                value.displayName = name;\n            }\n            if (!value.prototype.resolveDependencies) {\n                var di = this;\n                value.prototype.resolveDependencies = function(_internalCallCount = 0) {\n                    console.log('deprecated, use di.resolveDependencies(value)');\n                    console.trace();\n                    this.resolveDependencies = function() {};\n                    if (value.dependencies) {\n                        try {\n                            return di._resolveDependencies(this, value.dependencies, _internalCallCount + 1);\n                        } catch (err) {\n                            throw new Error('Failed to resolve dependencies for instance of ' +\n                                            name + ': ' + err.message);\n                        }\n                    }\n                };\n            }\n        }\n        if (value.dependencies) {\n            Object.defineProperty(value, 'dependencies', {\n                configurable: true,\n                writable: false,\n                enumerable: false,\n                value: this.constructor.parseDependencies(value.dependencies)\n            });\n        }\n    }\n\n    static parseDependencies(dependencies) {\n        return (function() {\n            if (Array.isArray(dependencies)) {\n                return dependencies.map((v) => {\n                    return {\n                        key: v,\n                        name: v\n                    };\n                });\n            } else {\n                return Object.keys(dependencies).map((key) => {\n                    var dependency = dependencies[key];\n                    if (typeof dependency === 'string') {\n                        dependency = { name: dependency };\n                    }\n                    dependency.key = key;\n\n                    if (!dependency.name) {\n                        dependency.name = key;\n                        if (dependency.arguments || dependency.call) {\n                            dependency.key = key[0].toLowerCase() + key.substr(1);\n                        }\n                    }\n                    return dependency;\n                });\n            }\n        })().filter(Boolean);\n    }\n\n    createInstance(className, args, _internalCallCount = 0) {\n        // console.log('='.repeat(_internalCallCount) + '> ' + 'Creating instance of ' + className);\n        if (!className) {\n            throw new Error('Unexpected value for className');\n        }\n        var Class_ = this._classes[className];\n        if (!Class_) {\n            throw new Error('Class ' + className + ' not found');\n        }\n        return this.createInstanceOf(Class_, args, _internalCallCount);\n    }\n\n    createInstanceOf(Class_, args, _internalCallCount = 0) {\n        var instance;\n        instance = Object.create(Class_.prototype);\n        // console.log('='.repeat(_internalCallCount) + '> ' + className, Class_, args, instance);\n        Object.keys(this._globals).forEach((key) => {\n            Object.defineProperty(instance, key, {\n                enumerable: false,\n                writable: false,\n                configurable: true,\n                value: this._globals[key]\n            });\n        });\n        if (Class_.dependencies) {\n            return this._resolveDependencies(instance, Class_.dependencies, _internalCallCount)\n                .then(() => {\n                    if (instance.initialize) {\n                        console.log(Class_.constructor.displayName + ' initialize method is deprecated');\n                        instance.initialize();\n                    }\n                })\n                .then(() => instance);\n        }\n        Class_.apply(instance, args);\n        if (instance.initialize) {\n            console.log(Class_.constructor.displayName + ' initialize method is deprecated');\n            return instance.initialize().then(() => instance);\n        }\n\n        Object.defineProperty(instance, 'logger', {\n            get: function() {\n                var logger = this._createLogger(Class_.name);\n                Object.defineProperty(instance, 'logger', {\n                    writable: false,\n                    configurable: false,\n                    value: logger\n                });\n                return logger;\n\n            }\n        });\n\n        return Promise.resolve(instance);\n    }\n}\n\n/*\nthis._forEachDependencies(Class_.dependencies, (key, dependency) => {\n    if (typeof dependency === 'string') {\n        instance[key] = this[dependency];\n    } else if (dependency.name) {\n        instance[key] = this[dependency.name];\n    } else {\n        instance[key] = this.createInstance(dependency.className, dependency.arguments);\n    }\n    if (!instance[key]) {\n        throw new Error('Unable to resolve dependency ' + JSON.stringify(dependency)\n                                                 + ' for class ' + className);\n    }\n});*/\n"]}